{"ast":null,"code":"import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\nvar frameloopDriver = function frameloopDriver(update) {\n  var passTimestamp = function passTimestamp(_ref) {\n    var timestamp = _ref.timestamp;\n    return update(timestamp);\n  };\n  return {\n    start: function start() {\n      return frame.update(passTimestamp, true);\n    },\n    stop: function stop() {\n      return cancelFrame(passTimestamp);\n    },\n    /**\n     * If we're processing this frame we can use the\n     * framelocked timestamp to keep things in sync.\n     */\n    now: function now() {\n      return frameData.isProcessing ? frameData.timestamp : performance.now();\n    }\n  };\n};\nexport { frameloopDriver };","map":null,"metadata":{},"sourceType":"module"}